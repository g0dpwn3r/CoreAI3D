FROM ubuntu:22.04
WORKDIR /root
# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive


# Install essential packages for AI operations and system control
RUN apt update && apt install -y \
    curl wget gnupg lsb-release apt-utils \
    build-essential file procps net-tools gawk tar \
    python3 python3-pip python3-venv \
    libffi-dev sqlite3 supervisor \
    imagemagick sox libboost-all-dev

RUN apt-get update && apt-get install -y curl ca-certificates gnupg lsb-release

RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -

RUN apt-get install -y nodejs && npm install -g npm@latest

RUN apt-get clean && rm -rf /var/lib/apt/lists/*

RUN npm install -g puppeteer cheerio axios ws

RUN apt-get update && apt-get install -y \
    git curl ca-certificates build-essential \
    libssl-dev zlib1g-dev libbz2-dev libreadline-dev \
    libsqlite3-dev wget llvm libncursesw5-dev xz-utils tk-dev \
    libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \
    make

# Create sandbox user
RUN useradd -m -s /bin/bash sandbox && \
    echo "sandbox:sandbox" | chpasswd && \
    usermod -aG sudo sandbox

# Create workspace directory
RUN mkdir -p /workspace /training_data && \
    chown -R sandbox:sandbox /workspace /training_data

RUN curl https://pyenv.run | bash


ENV HOME /root
# Set up environment variables for pyenv
ENV PYENV_ROOT="/root/.pyenv"
ENV PATH="$PYENV_ROOT/bin:$PATH"

RUN eval "$(pyenv init --path)" && \
    pyenv install 3.10.0 && \
    pyenv global 3.10.0 && \
    pyenv rehash && \
    python --version

# Install Python packages for AI operations
RUN pip3 install  \
    requests aiohttp websockets \
    psutil docker \
    opencv-python-headless \
    numpy pandas scipy \
    scikit-learn \
    pillow \
    pytesseract \
    SpeechRecognition \
    pyttsx3 \
    beautifulsoup4 \
    selenium \
    playwright

RUN git clone https://github.com/nodejs/node.git /tmp/node \
 && cd /tmp/node && git checkout v22.9.0 \
 && ./configure && make -j$(nproc) && make install \
 && npm install -g npm@latest

# Install Node.js packages for web automation
RUN npm install -g \
    puppeteer \
    cheerio \
    axios \
    ws

# Set up supervisor for process management
RUN mkdir -p /etc/supervisor/conf.d
COPY docker/sandbox/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Copy training scripts
COPY docker/training/train_linux_operations.py /usr/local/bin/
RUN chmod +x /usr/local/bin/train_linux_operations.py

# Set working directory
WORKDIR /workspace

# Switch to sandbox user
USER sandbox

# Environment variables
ENV HOME=/home/sandbox
ENV PATH="/home/sandbox/.local/bin:${PATH}"
ENV SANDBOX_TYPE=ubuntu

# Default command
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
